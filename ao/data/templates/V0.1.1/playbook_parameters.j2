{% for vnf in vnfs %}
{% for tenant in vnf.tenants %}
---
vnf:
  name:        "{{vnf.fqn[1:]}}"

tenant:
  name:        "{{tenant.fqn[1:]|replace('/','_')}}"
  description: "{{tenant.description}}"
  password:    "secret"
  cloud:       "{{tenant.datacenter}}"
  public_key:  "{{vnf.public_key}}"

security_groups:
{% for component in tenant.components %}
{% for interface in component.interfaces %}
{% set component_name = component.fqn[1:].replace('/','_') %}
{% set network_name   = interface.network.split('/')[-1] %}
{% set group_name     = component_name+'_'+network_name %}
- {{ group_name }}
{% endfor %}{# interfaces #}
{% endfor %}{# components #}

external_security_group_rules:
{% for component in tenant.components %}
{% for interface in component.interfaces %}
{% for rule in interface.rules %}
{% if rule.mode != "group" %}
{% set component_name = component.fqn[1:].replace('/','_') %}
{% set network_name   = interface.network.split('/')[-1] %}
{% set group_name     = component_name+'_'+network_name %}
- group:            {{ group_name }}
  direction:        {{rule.direction}}
  ethertype:        {{rule.family}}
  protocol:         {{rule.protocol}}
  min:              {{rule.min}}
  max:              {{rule.max}}
  mode:             {{rule.mode}}
  remote_ip_prefix: {{rule.prefix}}
{% endif %}{# mode != group  #}
{% endfor %}{# rules #}
{% endfor %}{# interfaces #}
{% endfor %}{# components #}

internal_security_group_rules:
{% for component in tenant.components %}
{% for interface in component.interfaces %}
{% for rule in interface.rules %}
{% if rule.mode == "group" %}
{% set component_name = component.fqn[1:].replace('/','_') %}
{% set network_name   = interface.network.split('/')[-1] %}
{% set group_name     = component_name+'_'+network_name %}
- group:            {{ group_name }}
  direction:        {{rule.direction}}
  ethertype:        {{rule.family}}
  protocol:         {{rule.protocol}}
  min:              {{rule.min}}
  max:              {{rule.max}}
  mode:             {{rule.mode}}
  remote_group:     {{rule.group[1:]|replace('/','_')}}
{% endif %}{# mode == group  #}
{% endfor %}{# rules #}
{% endfor %}{# interfaces #}
{% endfor %}{# components #}

networks:
{% for network in tenant.networks %}
- name: {{network.fqn[1:]|replace('/','_')}}
{% if network.ipv4 is defined %}
  ipv4:
    cidr:  "{{network.ipv4.cidr}}"
{% endif %}{# network.ipv4 #}
{% if network.ipv6 is defined %}
  ipv6:
    cidr:  "{{network.ipv6.cidr}}"
{% endif %}{# network.ipv6 #}
{% endfor %}{# networks #}

ports:
{% for component in tenant.components %}
{% for index in range(component.sizing.size) %}
{% for interface in component.interfaces %}
- name:           {{component.fqn[1:]|replace('/','_')}}_{{index}}_{{interface.network.split('/')[-1]}}
  network:        {{interface.network[1:]|replace('/','_')}}
  security_group: {{component.fqn[1:]|replace('/','_')}}_{{interface.network.split('/')[-1]}}
{% endfor %}{# interfaces #}
{% endfor %}{# loop #}
{% endfor %}{# components #}

nodes:
{% for component in tenant.components %}
{% for index in range(component.sizing.size) %}
- name:              {{component.fqn[1:]|replace('/','_')}}_{{index}}
  availability_zone: {{component.placement}}
  flavor:            {{component.flavor}}
  image:             {{component.image}}
  key_name:          {{tenant.fqn[1:]|replace('/','_')}}_keypair
  nics:
{% for interface in component.interfaces %}
      - port-name: {{component.fqn[1:]|replace('/','_')}}_{{index}}_{{interface.network.split('/')[-1]}}
{% endfor %}{# interfaces #}
{% endfor %}{# loop #}
{% endfor %}{# components #}

{% set has_volumes = False -%}
{% for component in tenant.components %}
{% for volume in component.volumes %}
{% set has_volumes = True -%}
{% endfor %}{# volumes #}
{% endfor %}{# components #}

{% if has_volumes %}
volumes:
{% else %}
volumes: []
{% endif %}
{% for component in tenant.components %}
{% for index in range(component.sizing.size) %}
{% for volume in component.volumes %}
    - name:        {{component.fqn[1:]|replace('/','_')}}_{{index}}_{{volume.name}}
      server:      {{component.fqn[1:]|replace('/','_')}}_{{index}}
      volume_type: {{component.placement}}
      size:        {{volume.size}}
      device:      {{volume.device}}
{% endfor %}{# volumes #}
{% endfor %}{# loop #}
{% endfor %}{# components #}

{% endfor %}{# tenants #}
{% endfor %}{# vnfs #}
